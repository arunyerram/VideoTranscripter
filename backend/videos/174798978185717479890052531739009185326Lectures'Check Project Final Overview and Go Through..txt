Hello guys, Myself Arun and I practice lecture sick and our problem statement result There is an already existing LMS learning management system of the Duke State University and their problem is that they are uploading the further learning management system. They are uploading the video as well as the supporting document and whenever they are uploading the videos, they have a doubt that they are uploading the videos as well as the files and they were ordered is there any relationship between the video uploaded as well as the file uploaded? So that from this problem, from this point we have a problem statement has arise and for the existing LMS we need to create an we need to create an LLM and we need to integrate this LLM with this LMS so that you can increase the overall learning experience of the students and main product Main aim of the main aim of the LLM is to analyze the video which was uploaded into the LMS as well as analyzer file and extract extract the content from both the video as well as the file and analyze the content of the video part and the file part. I need to show the analysis to the lecturers or the users of the learning management system so that based on that analysis and the relevancy score between the video uploaded and the file uploaded, they can take the decisions and whether they need to delete the video or the delete a particular video or file from the learning management system or move on and our LLM will summarize the video part as well as the file part and analyze them and show the relevancy between them to the users. And for crafting a solution for this problem, we are using MERN Stack, mongodb, Express, React and Node JS in mongodb we are storing the data whenever the lectures upload the video as well as the file. We are sending the details to store and storing them in the MongoDB and express we are using is a Express is a middleware so as you are using a JavaScript is a expression for the Express is the middleware part and React for the creating the front end part. We are using the React framework. We have created a nice UI so that anyone can easily navigate and Node JS is a runtime environment of the JavaScript and we are we have captured solution using the MERN stack and this is our stack which we have used for the creating the for creating a solution for this problem statement and this is a workflow of our problem statement where there is only one user professors and whenever they log in with the credentials they'll navigate to the UI page where they can upload the video as well as the file part. First they will upload the video and later on when they upload the video, the video is summarized. And automatically when the video is summarized, the UI is senior to the file and they will upload the file. And later on the file is summarized. And later on when I click on the graph button, the relevancy the relevancy is stored to them on the UI. And later on they can take their own decision. If the relevancy score is at the threshold or greater than threshold, then they can move on else they can delete the video from the LMS and later on they can upload the new video as well as the file part. And for the video part we are analyzing the video, we are extracting the audio from the video and later on we are extracting the text from the video. And we have summarize this text and I store them in the local directory a text file for the video part. And whenever they upload the file, we are extracting the text from the file and we are storing them in the local directory. And later on these both are summarized and analyzed and the relevancy score is sent to the backend. And from that backend we are making a request and we are storing and we have done that response which we get the valiency score which was sent to the backend. And for that response we have seen we are going to the graph and we are showing the UI in the. And the in the ui part, the GR we have displayed the graphs in the form of graph 1 bar chart so that anyone who have seen it can understand visually easily. And they can later on they can take the decision based on LNC score, especially the lecturers whether to keep the video or delete the video from the learning management system. And this is architecture diagram. For the front end part we have used React and Bootstrap, HTML, CSS web development languages for uploading the video and the file part we are creating the front end sidebar and then our bar for navigating through the website and express we have used for the middleware part we have created the endpoint so that back end of Internet can connect easily. And for the backend part we have used the MongoDB so that we can store the data or the video uploaded and the file uploaded and we can redo them as necessary. And for the summarizing the video part as well as the file part we are doing the LLMs so we can easily summarize, analyze and show the relevancy between Both of the files uploaded and the lectures can understand easily. And this is the last pick of the project. So that whenever they submit both the files and video, whenever they click on the graph button, the UI is done. We have created a UI and we have here the simple bars are bar graph and the normal graph so that there is a relevancy between the file uploaded and the video uploaded. And later when they hover on this bar chart and the normal graph, the score is visible. If the score is greater than or equal to threshold, then they can keep the video, else they can delete the video depends upon the lecturers. And this is my GitHub repo so that you can use the code in my GitHub repo. And now I'll navigate you through the entire website. I already started the project in my VS code. This is the front end terminal and the back end is this. It is already connected and we are. I'm running the Python LLM and in my Chrome browser they already done my practice running. I'm logging, I am logging out. Now I'll again login freshly from the start. Whenever the lecture visits, you need to provide these credentials. Now I'm entering my username and password as it is I have entered proper password. It is logged in. And whenever they click on the sidebar, they will navigate to the upload section of the subjects. And when they can click on the upload button, they can upload their PDFs and videos. First thing they're asked to upload the video and I'm providing the random name and I'm choosing the file from the local directory. Choosing the video file from the local directory. Whenever the submission is done and analyzed, text is stored in the text file. Automatically the UI is moving to the file part. The videos are uploaded here and the audio file is created. This is the video which I uploaded in the front end. And this is the audio file which has been created by the LLM. Now we need to wait for the text file after it is it has done the UI navigated to the front end file part automatically. Let's wait for a few seconds as it takes nearly 45 seconds to 1 minute to analyze the video. Not only the UI is changed and the upload PDF section is visible to the users, but it takes some time for analyzing the file. Then network connection is too slow. That's the reason there is an issue with it. But wait for a few seconds, that's the reason. And now it is done. Now the text file is created and it is stored in the local Directory of videos Automatically the UI is changed and now the lecturers can upload lectures on any user can upload the files. Now I am giving any random name and I am choosing the file from a local directory. It may be any PDF or PPT or any text file. It summarizes them. It summarizes it. Now I'm clicking on the submit button now Here the details of the file and the files are stored in the files directly in the friend project folder. This is a file which I now uploaded and text file is created. All the text is done which is analyzed part now later on there is a popup uploaded successfully. I'm clicking it on. Okay, now you can view the PDFs which I uploaded previously. These are the PDFs which I uploaded previously. I can see the PDF as I have deleted this PDF in the front end part that the reason they are not visible and previously uploaded PDF is this upload PDF When I click on this as a PDF will be uploaded because I have created a previous collections in the MongoDB collection as well as from the local folder as it increases the space. That's the reason because I have recently committed the entire code to the GitHub so it doesn't act as a large file. So I deleted from the local directory and these are the files which I uploaded and this is a graph button whenever I now upload the video and the file. Now if you want to see the relationship between them I need to click on the graph button. I have clicked on the graph button and this is the relevancy between both the file and the this is a normal graph and this is a bar graph similarity score is 21.57547 because I have uploaded entirely different video in the file and the file is supporting document is not regarding the video part and this difference is huge and the similarity is too less so based on this they can take the decision and can delete the video as well as the file part. And this is the last part of a project where the users can users or lectures can easily understand the relevancy score or the relevancy between the video and the file part uploaded and this is our last thing so that LLM which summarized the content from the video and the file we have sent the reliances go to the backend and from the back end we have taken it from the front end and we have seen on and we have created a graph so the users can easily understand the between both the files and the video part. And this is our project and from the previous case we uploaded, we have changed it and changed it somewhat because in the previous session we have done we have summarized the video as well as the file part separately and even we have used the API keys. But from in this case we have little modified it. We have run the LLM locally and we have summarized it and it went well and this is our project and thank you.